/* SPDX-License-Identifier: Apache-2.0
 *
 * BenchExec is a framework for reliable benchmarking.
 * This file is part of BenchExec.
 * Copyright (C) Dirk Beyer. All rights reserved.
 */
.App {
  // text-align: center;
  font-family: "Droid Sans", "Liberation Sans", Ubuntu, "Trebuchet MS", Tahoma,
    Arial, Verdana, sans-serif;
}
// $key-color: #009440;
$key-color: #71bcff;
$border-color: rgb(173, 173, 173);
$table-border: 1px solid $border-color;
$hover-color: darken(white, 20%);

//------------------common------------------
.link {
  text-decoration: underline;
  color: $key-color;
  cursor: pointer;
}
.btn {
  margin: 0 10px 9px 0;
  text-align: center;
  height: 35px;
  cursor: pointer;

  //background-image: linear-gradient(to left, $key-color, white);
  box-shadow: 0 4px 12px 0 rgba($key-color, 0.2);
  -o-transition: all 0.4s ease-in-out;
  -webkit-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
  background-size: 300% 100%;

  &:hover {
    // background-position: 100% 0;
    // -o-transition: all .4s ease-in-out;
    // -webkit-transition: all .4s ease-in-out;
    // transition: all .4s ease-in-out;
    background: $key-color;
  }

  &:disabled {
    background: darkgrey;
    cursor: default;
    &:hover {
      background: darkgrey;
    }
  }
}
.btn-apply {
  margin-left: 100px;
  background: $key-color;
  //background-image: linear-gradient(to right, $key-color, white);
  box-shadow: 0 4px 12px 0 rgba($key-color, 0.5);
  &:hover {
    background: white;
  }
}

.selectColumns {
  cursor: pointer;
  font-weight: 700;
  background-color: white;
  &:hover {
    background-color: $hover-color;
  }
}
.header__tool-infos {
  font-weight: 700;
}

.separator {
  margin: 0 !important;
  padding: 0 !important;
  background: $border-color !important;
}

//------------------overview------------------
$content-height: calc(100vh - 43px); // height of .menu sums up to 43px

.overview {
  background: white;

  .menu {
    display: flex;
    width: calc(100% - 20px);
    padding: 10px 10px 0;
    font-weight: 700;
    z-index: 100;
    background: $key-color;
    align-items: flex-start;

    .menu-item {
      height: 17px;
      margin-right: 1px;
      padding: 8px 13px;
      border-radius: 8px 8px 0 0;
      background: rgba(255, 255, 255, 0.5);
      font-size: 14px;
      text-decoration: none;
      white-space: nowrap;
      color: black;
      &.selected {
        background: white;
      }
    }
  }
  .route-container {
    max-height: $content-height;
    overflow: auto;
  }
  button {
    cursor: pointer;
    &:disabled {
      display: none;
    }
    &.reset {
      display: block;
      position: fixed;
      top: 0;
      right: 10px;
      padding: 5px;
      border-radius: 0 0 8px 8px;
      background: rgba(255, 255, 255, 0.5);
      border: none;
      font-size: 12px;
      color: black;
      .highlight {
        font-weight: bold;
      }
      &:disabled {
        cursor: auto;
        .hide {
          visibility: hidden;
        }
      }
    }
  }
}

//------------------summary------------------
#summary {
  padding-top: 30px;
  text-align: center;
  #benchmark_setup {
    width: 100%;
    overflow-x: scroll;
    margin: 40px 0;
    table {
      border-collapse: collapse;
      width: 100%;
      td,
      th {
        border: 1px solid #ddd;
        padding: 8px;
      }
      .options {
        ul {
          margin: 0;
          padding: 0 0 0 17px;
        }
        li {
          text-align: left;
          font-size: 9pt;
          list-style: none;
        }
      }
      .benchmark,
      th {
        font-weight: bold;
      }

      tr:nth-child(even) {
        background-color: mix($hover-color, white, 33%);
      }

      tr:hover {
        background-color: mix($hover-color, white, 66%);
      }

      th {
        padding-top: 8px;
        padding-bottom: 8px;
        text-align: left;
        width: 14vw;
      }
    }
  }
  #statistics .rt-table {
    .rt-td {
      padding-top: 8px;
      padding-bottom: 8px;
      .cell {
        text-align: right;
      }
    }
    .row-title {
      font-weight: 700;
    }
    .rt-tr {
      &-group {
        border-bottom: $table-border !important;
      }
    }
    .columns {
      cursor: pointer;
      &:hover {
        background-color: $hover-color;
      }
    }
  }

  p {
    margin-top: 40px;
  }
}

//------------------table------------------
.mainTable {
  a {
    text-decoration: none;
    display: inline-block;
    margin: 0 10px; 
  }
  a:hover {
    background-color: $hover-color;
  }
  a:focus {
    outline: 1px dotted red;
  }
  .fixed {
    justify-content: space-around;
    width: 33%;
    margin: auto;

    input {
      margin-right: 40px;
    }
  }
  .ReactTable {
    // Add scroll bar inside table instead of relying on outer scroll bar.
    // otherwise scroll bar extends besides pagination bar.
    height: $content-height;
    .rt-table {
      // Better have vertical scroll bar always visible (less jumping around)
      overflow-y: scroll;
    }

    // force pagination bar to bottom by preventing other elements from growing
    .rt-thead,
    .rt-tbody,
    .rt-tr-group {
      flex-grow: 0;
    }
  }

  .rt-thead {
    &.-headerGroups > div > div {
      &:first-child {
        width: 30vw;
      }
    }
    .rt-resizable-header:hover {
      // TODO: Something like :not(:has(.selectColumns:hover)) would be good
      // to avoid coloring the background if the user hovers over a nested button,
      // but :has is not usable yet.
      background-color: $hover-color;
    }
  }

  .rt-tbody {
    span {
      text-align: center;
    }
    .row_id:not(:nth-child(1)) {
      font-size: 9pt;
      border-left: 1px solid black;
      margin-left: 5px;
      padding-left: 5px;
      height: 100%;
      color: #484848;
    }
    .rt-td {
      padding: 2px;
      text-align: right;
      > * {
        padding: 6px 2px;
        height: 100%;
      }
    }
    .row__name {
      text-align: left;
      display: inline-block;
      width: auto !important;
      color: black;
      &--cellLink {
        color: black;
      }
    }
    .rt-tr-group {
      border-bottom: $table-border !important;
    }
    .rt-tr-group:last-child {
      border-bottom: 1px solid lightgrey;
    }
  }

  .pagination-bottom {
    position: sticky;
    bottom: 0;
    z-index: 99;
    background: white;
  }

  .correct {
    color: green;
  }
  .error {
    color: magenta;
  }
  .unknown,
  .correct-unconfirmed {
    color: $key-color;
  }
  .wrong {
    color: red;
  }
  .aborted {
    text-align: center;
  }
  .aborted:after {
    content: "â€”";
  }
  input {
    width: 100%;
    text-align: right;
    &::placeholder {
      color: lightgray;
    }
  }
  select {
    height: 100%;
  }
}

.quantilePlot {
  margin: 20px;
  select {
    display: flex;
    margin: auto;
  }
  .rv-discrete-color-legend {
    padding: 0;
    border: 1px solid rgb(186, 186, 186);
    float: right;
    max-width: 50%;
  }

  .rv-discrete-color-legend-item.clickable {
    &:hover {
      background: $hover-color;
    }
  }
}

.scatterPlot {
  text-align: center;
  &__select select {
    margin: 10px;
  }
  .middle-line {
    .rv-xy-plot__axis__line {
      stroke: $key-color;
    }
  }
  &__plot {
    margin: auto;
  }
  button {
    margin: 10px;
  }
}

.plot {
  &__noresults {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

.info {
  margin: 40px;

  &-header {
    margin: 40px 0;
    display: flex;
    justify-content: space-between;
    h1 {
      margin: 0;
    }
    span {
      font-size: 9pt;
      border: 1px solid $key-color;
      padding: 5px;
    }
  }
}

.ReactModal__Body--open {
  // stop body from scrolling while overlay is open
  overflow: hidden;
}
.ReactModal__Overlay {
  z-index: 900;
}
.overlay {
  position: fixed;
  overflow: scroll;
  top: 80px;
  right: 20px;
  left: 20px;
  bottom: 40px;
  background: white;
  border: 5px solid grey;
  border-radius: 5px;

  h1 {
    margin-bottom: 40px;
  }
  th,
  td {
    cursor: pointer;
    text-align: center;
    label {
      cursor: pointer;
    }
    background: white;
    // color: #ab0202;
    color: #8e8d8d;
    &.checked {
      color: black;
    }
  }
  th:first-child {
    background: white;
  }
  td:first-child {
    width: 30%;
    text-align: left;
  }
  input {
    display: none;
  }

  &__buttons {
    width: 100%;
    display: flex;
    justify-content: center;
    .btn {
      margin-top: 50px;
      width: 20vw;
    }
  }

  th {
    border-bottom: 1px solid black;
  }

  .closing {
    cursor: pointer;
    font-size: 120%;
    border-radius: 4px;

    &:hover {
      color: white;
      background: black;
    }
  }

  &.second-level {
    .link-overlay-header-container {
      background-color: white;
    }

    .link-overlay-text {
      margin-top: 0;
    }
  }

  .link-overlay {
    &-file-link {
      color: blue;
      text-decoration: underline;
      background-color: inherit;
      border: none;
      font: inherit;

      &:hover {
        cursor: pointer;
      }
    }

    &-header-container {
      display: flex;
      justify-content: space-between;
      flex-direction: row-reverse;
      position: sticky;
      top: 0;
      left: 0;
      height: 30px;
      padding: 10px 10px 0;

      // This container must not receive pointer events, otherwise reaching
      // through to link-overlay-text does not work. But all UI elements
      // in it need to be clickable.
      pointer-events: none;
      & > * {
        pointer-events: auto;
      }
    }

    &-back {
      &-button:hover {
        cursor: pointer;
      }

      &-icon {
        margin-right: 1em;
      }
    }

    &-text {
      // height of .link-overlay-header-container
      margin-top: -30px;
      padding: 0px 10px 10px 10px;
    }
  }
}

.rt-td {
  text-align: left;
}
.ReactTable {
  border: none !important;
}
