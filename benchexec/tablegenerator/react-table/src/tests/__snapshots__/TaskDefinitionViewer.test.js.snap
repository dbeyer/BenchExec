// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render TaskDefinitionViewer for empty_file.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    
  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for input_files_as_mapping.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files:
  - input_file: false_sub_task.yml
  - input_file: false_other_sub_task.yml

properties:
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    
    expected_verdict: false
    subproperty: other_subproperty

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for input_files_brackets.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files:
  [
    
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_sub_task.yml
  </span>
  <span>
    ,
    
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_other_sub_task.yml
  </span>
  <span>
    
  ]

properties:
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    
    expected_verdict: false
    subproperty: other_subproperty

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for input_files_multiline_string.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_other_sub_task.yml
  </span>
  <span>
    

properties:
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    
    expected_verdict: false
    subproperty: other_subproperty

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for multiple_input_files.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files:
  - 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_sub_task.yml
  </span>
  <span>
    
  - 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_other_sub_task.yml
  </span>
  <span>
    

properties:
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    
    expected_verdict: false
    subproperty: other_subproperty

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for multiple_property_files.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_other_sub_task.yml
  </span>
  <span>
    

properties:
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    
    expected_verdict: false
    subproperty: other_subproperty
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    other.prp
  </span>
  <span>
    
    expected_verdict: false

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for no_input_and_property_files.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for no_input_files.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files: []

properties:
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    
    expected_verdict: false
    subproperty: other_subproperty
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    other.prp
  </span>
  <span>
    
    expected_verdict: false

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for no_property_files.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files:
  - 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_sub_task.yml
  </span>
  <span>
    
  - 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_other_sub_task.yml
  </span>
  <span>
    

properties: []

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for one_input_file.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_other_sub_task.yml
  </span>
  <span>
    

properties:
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    
    expected_verdict: false
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    other.prp
  </span>
  <span>
    

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for one_property_file.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_other_sub_task.yml
  </span>
  <span>
    

properties:
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    
    subproperty: other_subproperty

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for other_list_of_lists.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    - [ name, duration ]
- [ task1, 152 ]
- [ task2, 165 ]

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for other_list_of_other_mappings.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    - name: task1
  duration: 152
- name: task2
  duration: 165

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for other_lists.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    task1:
  - programs
  - tasks

task2:
  - input
  - bench
  - output

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for property_files_brackets.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_other_sub_task.yml
  </span>
  <span>
    

properties:
  [
    {
        property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    ,
        expected_verdict: false,
        subproperty: other_subproperty
      },
    {
        property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    other.prp
  </span>
  <span>
    ,
        expected_verdict: false
      }
  ]

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for property_files_multiline_string.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_other_sub_task.yml
  </span>
  <span>
    

properties:
  - property_file: "
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    "
    expected_verdict: false
    subproperty: "other_subproperty"

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for property_files_no_mapping.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_other_sub_task.yml
  </span>
  <span>
    

properties:
  - test.prp
  - other.prp

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for task_definition_doc_template.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    # Required, string with format version of this file (currently only "1.0")
format_version: "1.0"

# Required, either a string or a list of strings with file-name patterns.
# Relative paths interpreted as relative to this file.
# Each matching file or directory will be given as input to the tool.
input_files:
  - '
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    *.md
  </span>
  <span>
    '
  - '
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    ../*.md
  </span>
  <span>
    '

# Optional, either a string or a list of strings with file-name patterns.
# Relative paths interpreted as relative to this file.
# Each matching file or directory is treated as required for the task,
# but will not be explicitly given to the tool.
required_files:
  - 'properties/'

# Optional, contains list of dicts, each with at least the key "property_file".
# Existing entries specify which properties can be used for tasks from this file.
# If given, benchexec will compare expected verdicts against actual verdicts.
properties:
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    properties/memsafety.prp
  </span>
  <span>
     # string with file-name pattern that matches exactly one file
    expected_verdict: false # optional boolean
    subproperty: valid-deref # optional string, contains violated subproperty
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    properties/unreach-call.prp
  </span>
  <span>
    
    expected_verdict: true
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    properties/overflow.prp
  </span>
  <span>
    

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for undefined_input_files.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

properties:
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    test.prp
  </span>
  <span>
    
    subproperty: other_subproperty
  - property_file: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    other.prp
  </span>
  <span>
    
    expected_verdict: false

  </span>
</pre>
`;

exports[`Render TaskDefinitionViewer for undefined_property_files.yml 1`] = `
<pre
  className="link-overlay-text"
>
  <span>
    format_version: "1.0"

input_files: 
  </span>
  <span
    className="link-overlay-file-link"
    onClick={[Function]}
  >
    false_task.yml
  </span>
  <span>
    

  </span>
</pre>
`;
